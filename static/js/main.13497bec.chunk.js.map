{"version":3,"sources":["components/PostAddVidForm/PostAddVidForm.js","action.js","components/VideoSubComment/VideoSubComment.js","components/VideoSubComments/VideoSubComments.js","components/VideoMainComment/VideoMainComment.js","components/VideoMainComments/VideoMainComments.js","components/PostVideo/PostVideo.js","components/Post/Post.js","components/Wall/Wall.js","serviceWorker.js","index.js","App.js"],"names":["PostAddVidForm","dispatch","useState","videoLink","setVideoLink","videoName","setVideoName","action","className","onSubmit","evt","preventDefault","type","placeholder","onChange","target","value","VideoSubComment","subComment","heartColor","setHeartColor","heartLiked","setHeartLiked","name","content","onClick","subCommentId","id","likes","subCommentRemoveId","VideoSubComments","subComments","VideoMainComment","mainComment","message","setMessage","mainCommentId","mainCommentRemoveId","mainCommentAddId","mainMessage","comments","map","o","VideoMainComments","mainComments","PostVideo","data","addComment","addPostId","controls","src","videoUrl","likePostId","removePostId","htmlFor","Post","nextPostVideoId","nextMainCommentId","nextSubCommentId","initialData","isLiked","commentLike","remove","filter","addSubComment","p","reducer","Wall","useReducer","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sMAGe,SAASA,EAAT,GAAuC,IAAbC,EAAY,EAAZA,SAAY,EAgBfC,mBAAS,IAhBM,mBAgB1CC,EAhB0C,KAgB/BC,EAhB+B,OAiBfF,mBAAS,IAjBM,mBAiB1CG,EAjB0C,KAiB/BC,EAjB+B,KAmBjD,OACI,0BAAMC,OAAO,GAAGC,UAAU,oBAAoBC,SAnB7B,SAAAC,GACjBA,EAAIC,iBACJV,EAAS,CAACW,KCKO,YDLUT,UAAWA,EAAWE,UAAWA,IAC5DC,EAAa,IACbF,EAAa,MAgBT,uBAAKI,UAAU,WAAf,mFACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,2BAAOI,KAAK,OAAOC,YAAY,iDAAcC,SAjB1C,SAAAJ,GACf,IAAIP,EAAYO,EAAIK,OAAOC,MAC3BZ,EAAaD,IAekEa,MAAOb,IAC1E,2BAAOS,KAAK,OAAOC,YAAY,+FAAoBC,SAd5C,SAAAJ,GACnB,IAAIL,EAAYK,EAAIK,OAAOC,MAC3BV,EAAaD,IAY4EW,MAAOX,EAAWG,UAAU,iBAE7G,4BAAQA,UAAU,aAAlB,sDE3BD,SAASS,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,WAAYjB,EAAY,EAAZA,SAAY,EAC1BC,mBAAS,IADiB,mBACvDiB,EADuD,KAC3CC,EAD2C,OAE1BlB,oBAAS,GAFiB,mBAEvDmB,EAFuD,KAE3CC,EAF2C,KAkB9D,OACI,yBAAKd,UAAU,cACX,2BAAIU,EAAWK,MACf,2BAAIL,EAAWM,SACf,4BAAQC,QAlBG,WACXJ,GACAC,GAAc,GACdF,EAAc,WAEdE,GAAc,GACdF,EAAc,QAElBnB,EAAS,CAAEW,KDPa,mBCOWc,aAAcR,EAAWS,MAU3BnB,UAAWW,GAAaD,EAAWU,OAChE,4BAAQH,QARD,WACXxB,EAAS,CAAEW,KDVe,qBCUWiB,mBAAoBX,EAAWS,OAOhE,MCvBG,SAASG,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,YAAa9B,EAAW,EAAXA,SACnD,OACI,6BACI,kBAACgB,EAAD,CACAC,WAAYa,EACZ9B,SAAUA,KCJP,SAAS+B,EAAT,GAAsD,IAA1BC,EAAyB,EAAzBA,YAAahC,EAAY,EAAZA,SAAY,EAClCC,mBAAS,IADyB,mBACzDgC,EADyD,KAChDC,EADgD,OAE5BjC,mBAAS,IAFmB,mBAEzDiB,EAFyD,KAE7CC,EAF6C,OAG5BlB,oBAAS,GAHmB,mBAGzDmB,EAHyD,KAG7CC,EAH6C,KA+BhE,OACI,yBAAKd,UAAU,eACX,2BAAIyB,EAAYV,MAChB,2BAAIU,EAAYT,SAChB,4BAAQC,QAzBG,WACXJ,GACAC,GAAc,GACdF,EAAc,WAEdE,GAAc,GACdF,EAAc,QAElBnB,EAAS,CAAEW,KHlBc,oBGkBWwB,cAAeH,EAAYN,MAiB9BnB,UAAWW,GAAac,EAAYL,OACjE,4BAAQH,QAfD,WACXxB,EAAS,CAAEW,KHrBgB,sBGqBWyB,oBAAqBJ,EAAYN,OAcnE,KACA,0BAAMlB,SAZK,SAAAC,GACfA,EAAIC,iBACJV,EAAS,CAAEW,KHzBa,mBGyBW0B,iBAAkBL,EAAYN,GAAIY,YAAaL,IAClFC,EAAW,MAUH,2BAAOvB,KAAK,OAAOC,YAAY,UAAUC,SAjCtC,SAAAJ,GACX,IAAMwB,EAAUxB,EAAIK,OAAOC,MAC3BmB,EAAWD,IA+BwDlB,MAAOkB,IAClE,4CAEHD,EAAYO,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAACZ,EAAD,CAC3BC,YAAaW,EACbzC,SAAUA,QC5CX,SAAS0C,EAAT,GAAwD,IAA3BC,EAA0B,EAA1BA,aAAc3C,EAAY,EAAZA,SACtD,OACI,6BACI,kBAAC+B,EAAD,CACIC,YAAaW,EACb3C,SAAUA,KCJX,SAAS4C,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,SAAY,EACpBC,mBAAS,IADW,mBAC3CgC,EAD2C,KAClCC,EADkC,OAEdjC,mBAAS,IAFK,mBAE3CiB,EAF2C,KAE/BC,EAF+B,OAGdlB,oBAAS,GAHK,mBAG3CmB,EAH2C,KAG/BC,EAH+B,KAyB5CyB,EAAa,SAAArC,GACfA,EAAIC,iBACJV,EAAS,CAAEW,KL7BO,aK6BWoC,UAAWF,EAAKnB,GAAIO,QAASA,IAC1DC,EAAW,KAGf,OACI,wBAAI3B,UAAU,cACV,2BAAOyC,UAAQ,EAACzC,UAAU,SACtB,4BAAQ0C,IAAKJ,EAAKK,YAEtB,4BAAQ1B,QA1BG,WACXJ,GACAC,GAAc,GACdF,EAAc,WAEdE,GAAc,GACdF,EAAc,QAElBnB,EAAS,CAAEW,KLtBQ,cKsBWwC,WAAYN,EAAKnB,MAkBdnB,UAAWW,GAAxC,SAAsD2B,EAAKlB,OAC3D,4BAAQH,QAhBK,WACjBxB,EAAS,CAAEW,KLzBU,gBKyBWyC,aAAcP,EAAKnB,OAe/C,KACA,2BAAImB,EAAKzC,WACT,2BAAOiD,QAAQ,0BAAf,WACA,0BAAM7C,SAAUsC,GACZ,2BAAOnC,KAAK,OAAOe,GAAG,yBAAyBd,YAAY,mBAAmBC,SApCvE,SAAAJ,GACf,IAAIwB,EAAUxB,EAAIK,OAAOC,MACzBmB,EAAWD,IAkCiGlB,MAAOkB,IAC3G,4BAAQT,QAASsB,GAAjB,QAEJ,yBAAKvC,UAAU,UAEPsC,EAAKN,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAD,CACnBC,aAAcF,EACdzC,SAAUA,SCjDnB,SAASsD,EAAT,GAAmC,IAAnBT,EAAkB,EAAlBA,KAAM7C,EAAY,EAAZA,SACjC,OACI,wBAAIO,UAAU,eACV,kBAACqC,EAAD,CACIC,KAAMA,EACN7C,SAAUA,KCH1B,IAAIuD,EAAkB,EAClBC,EAAoB,EACpBC,EAAmB,EAEjBC,EAAc,CAChB,CACIhC,GAAI6B,IACJL,SAAU,yFACV9C,UAAW,WACXuB,MAAO,EACPgC,SAAS,EACTpB,SAAU,KAIlB,SAASqB,EAAYrB,EAAUb,GAC3B,OAAOa,EAASC,KAAI,SAAAC,GAChB,OAAIA,EAAEf,KAAOA,EACFe,EAEPA,EAAEkB,QACK,eAAKlB,EAAZ,CAAed,MAAOc,EAAEd,MAAQ,EAAGgC,SAAS,IAEzC,eAAKlB,EAAZ,CAAed,MAAOc,EAAEd,MAAQ,EAAGgC,SAAS,OAUpD,SAASE,EAAOhB,EAAMnB,GAClB,OAAOmB,EAAKiB,QAAO,SAAArB,GAAC,OAAIA,EAAEf,KAAOA,KASrC,SAASoB,EAAWD,EAAMZ,GACtB,MAAM,CAAE,CAAEP,GAAI8B,IAAqBlC,KAAM,OAAQC,QAASU,EAASN,MAAO,EAAGgC,SAAS,EAAOpB,SAAU,KAAvG,mBAAgHM,IAGpH,SAASkB,EAAclB,EAAMnB,EAAIO,GAC7B,OAAOY,EAAKL,KACR,SAAAwB,GAAC,sBAEUA,EAFV,CAEazB,SAAUyB,EAAEtC,KAAOA,EAAKsC,EAAEzB,SAAhB,sBAA+ByB,EAAEzB,UAAjC,CAA2C,CACvDb,GAAI+B,IAAoBnC,KAAM,QAASC,QAASU,EAASN,MAAO,EAAGgC,SAAS,UAMhG,SAASM,EAAQpB,EAAMvC,GACnB,OAAQA,EAAOK,MACX,IPjEmB,cOmEf,OAAOiD,EAAYf,EADIvC,EAAf6C,YAEZ,IPhEyB,oBOgEzB,IACYhB,EAAkB7B,EAAlB6B,cACR,OAAOU,EAAKL,KACR,SAAAC,GAAC,sBAAUA,EAAV,CAAaF,SAAUqB,EAAYnB,EAAEF,SAAUJ,QAExD,IPjEwB,mBOiExB,IACYV,EAAiBnB,EAAjBmB,aACR,OAAOoB,EAAKL,KACR,SAAAC,GAAC,sBAAUA,EAAV,CAAaF,UA5CNI,EA4C+BF,EAAEF,SA5CnBb,EA4C6BD,EA3CxDkB,EAAaH,KAChB,SAAAwB,GAAC,sBAAUA,EAAV,CAAazB,SAAUqB,EAAYI,EAAEzB,SAAUb,WAFxD,IAAwBiB,EAAcjB,KA8C9B,IP7EqB,gBO+EjB,OAAOmC,EAAOhB,EADWvC,EAAjB8C,cAEZ,IP5E2B,sBO4E3B,IACYhB,EAAwB9B,EAAxB8B,oBACR,OAAOS,EAAKL,KACR,SAAAC,GAAC,sBAAUA,EAAV,CAAaF,SAAUsB,EAAOpB,EAAEF,SAAUH,QAEnD,IP7E0B,qBO6E1B,IACYR,EAAuBtB,EAAvBsB,mBACR,OAAOiB,EAAKL,KACR,SAAAC,GAAC,sBAAUA,EAAV,CAAaF,UA/CJI,EA+C+BF,EAAEF,SA/CnBb,EA+C6BE,EA9C1De,EAAaH,KAChB,SAAAwB,GAAC,sBAAUA,EAAV,CAAazB,SAAUsB,EAAOG,EAAEzB,SAAUb,WAFnD,IAA0BiB,EAAcjB,KAiDhC,IPzFkB,aOyFlB,IACYqB,EAAczC,EAAdyC,UACAd,EAAY3B,EAAZ2B,QACR,OAAOY,EAAKL,KACR,SAAAC,GAAC,sBACMA,EADN,CAEGF,SAAUE,EAAEf,KAAOqB,EAAYN,EAAEF,SAAWO,EAAWL,EAAEF,SAAUN,QAG/E,IP9FwB,mBO8FxB,IACYI,EAAqB/B,EAArB+B,iBACAC,EAAgBhC,EAAhBgC,YACR,OAAOO,EAAKL,KACR,SAAAC,GAAC,sBACMA,EADN,CAEGF,SAAUwB,EAActB,EAAEF,SAAUF,EAAkBC,QAGlE,IPlGiB,YOkGjB,IACYpC,EAAcI,EAAdJ,UACAE,EAAcE,EAAdF,UACR,MAAM,GAAN,mBAAWyC,GAAX,CAAiB,CAAEnB,GAAI6B,IAAmBL,SAAUhD,EAAWE,UAAWA,EAAWuB,MAAO,EAAGgC,SAAS,EAAOpB,SAAU,MAC7H,QACI,OAAOM,GAIJ,SAASqB,IAAQ,IAAD,EACFC,qBAAWF,EAASP,GADlB,mBACpBb,EADoB,KACd7C,EADc,KAK3B,OACI,yBAAKO,UAAU,aACX,gCACI,gCACI,yBAAK0C,IANF,yDAMmBmB,IAAI,GAAG7D,UAAU,gBAE3C,yBAAKA,UAAU,eACX,kBAACR,EAAD,CAAgBC,SAAUA,MAGlC,8BACI,iFACA,iCACI,4BAEQ6C,EAAKL,KAAI,SAAAC,GAAC,OAAI,kBAACa,EAAD,CACVT,KAAMJ,EACNzC,SAAUA,WChItBqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCHD,WACX,OACI,6BACI,kBAACT,EAAD,SDAI,MAASU,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.13497bec.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { ADD_VIDEO } from '../../action';\n\nexport default function PostAddVidForm({ dispatch }) {\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        dispatch({type: ADD_VIDEO, videoLink: videoLink, videoName: videoName});\n        setVideoName('');\n        setVideoLink('');\n    };\n    const handleSave = evt => {\n        let videoLink = evt.target.value;\n        setVideoLink(videoLink);\n    };\n    const handleSaveName = evt => {\n        let videoName = evt.target.value;\n        setVideoName(videoName);\n    };\n\n    const [videoLink, setVideoLink] = useState('');\n    const [videoName, setVideoName] = useState('');\n\n    return (\n        <form action=\"\" className=\"post-add-vid-form\" onSubmit={handleSubmit}>\n            <p   className=\"add-vid\">Добавить видео</p>\n            <div className=\"blockFlex\">\n                <div className=\"blockInput\">\n                    <input type=\"text\" placeholder=\"Введите URL\" onChange={handleSave} value={videoLink}/>\n                    <input type=\"text\" placeholder=\"Введите имя видео\" onChange={handleSaveName} value={videoName} className=\"bottomInput\"/>\n                </div>\n                <button className=\"buttonAdd\">Добавить</button>\n            </div>\n            \n        </form>\n    )\n}\n","export const ACTION_LIKE = 'ACTION_LIKE';\nexport const ACTION_REMOVE = 'ACTION_REMOVE';\nexport const ACTION_ADD = 'ACTION_ADD';\n\nexport const MAIN_COMMENT_LIKE = 'MAIN_COMMENT_LIKE';\nexport const MAIN_COMMENT_REMOVE = 'MAIN_COMMENT_REMOVE';\nexport const MAIN_COMMENT_ADD = 'MAIN_COMMENT_ADD';\n\nexport const SUB_COMMENT_LIKE = 'SUB_COMMENT_LIKE';\nexport const SUB_COMMENT_REMOVE = 'SUB_COMMENT_REMOVE';\n\nexport const ADD_VIDEO = 'ADD_VIDEO';","import React, { useState } from 'react'\nimport { SUB_COMMENT_LIKE, SUB_COMMENT_REMOVE } from '../../action';\n\nexport default function VideoSubComment({ subComment, dispatch }) {\n    const [heartColor, setHeartColor] = useState('');\n    const [heartLiked, setHeartLiked] = useState(false);\n\n    const handleLike = () => {\n        if (heartLiked) {\n            setHeartLiked(false);\n            setHeartColor('black');\n        } else {\n            setHeartLiked(true);\n            setHeartColor('red');\n        }\n        dispatch({ type: SUB_COMMENT_LIKE, subCommentId: subComment.id });\n    };\n\n    const remove = () => {\n        dispatch({ type: SUB_COMMENT_REMOVE, subCommentRemoveId: subComment.id });\n    };\n    return (\n        <div className=\"subcomment\">\n            <p>{subComment.name}</p>\n            <p>{subComment.content}</p>\n            <button onClick={handleLike} className={heartColor}>{subComment.likes}</button>\n            <button onClick={remove}>x</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport VideoSubComment from '../VideoSubComment/VideoSubComment'\n\nexport default function VideoSubComments({subComments, dispatch}) {\n    return (\n        <div>\n            <VideoSubComment \n            subComment={subComments}\n            dispatch={dispatch}\n            />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport VideoSubComments from '../VideoSubComments/VideoSubComments'\nimport { MAIN_COMMENT_LIKE, MAIN_COMMENT_REMOVE, MAIN_COMMENT_ADD } from '../../action';\n\nexport default function VideoMainComment({ mainComment, dispatch }) {\n    const [message, setMessage] = useState('');\n    const [heartColor, setHeartColor] = useState('');\n    const [heartLiked, setHeartLiked] = useState(false);\n\n    const onSave = evt => {\n        const message = evt.target.value;\n        setMessage(message);\n    };\n\n    const handleLike = () => {\n        if (heartLiked) {\n            setHeartLiked(false);\n            setHeartColor('black');\n        } else {\n            setHeartLiked(true);\n            setHeartColor('red');\n        }\n        dispatch({ type: MAIN_COMMENT_LIKE, mainCommentId: mainComment.id });\n    };\n\n    const remove = () => {\n        dispatch({ type: MAIN_COMMENT_REMOVE, mainCommentRemoveId: mainComment.id });\n    };\n\n    const addComment = evt => {\n        evt.preventDefault();\n        dispatch({ type: MAIN_COMMENT_ADD, mainCommentAddId: mainComment.id, mainMessage: message });\n        setMessage('');\n    };\n\n    return (\n        <div className=\"maincomment\">\n            <p>{mainComment.name}</p>\n            <p>{mainComment.content}</p>\n            <button onClick={handleLike} className={heartColor}>{mainComment.likes}</button>\n            <button onClick={remove}>x</button>\n            <form onSubmit={addComment}>\n                <input type=\"text\" placeholder=\"respond\" onChange={onSave} value={message} />\n                <button>respond</button>\n            </form>\n            {mainComment.comments.map(o => <VideoSubComments\n                subComments={o}\n                dispatch={dispatch}\n            />)}\n        </div>\n    )\n}\n","import React from 'react'\nimport VideoMainComment from '../VideoMainComment/VideoMainComment'\n\nexport default function VideoMainComments({ mainComments, dispatch }) {\n    return (\n        <div>\n            <VideoMainComment\n                mainComment={mainComments}\n                dispatch={dispatch}\n            />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport VideoMainComments from '../VideoMainComments/VideoMainComments'\nimport { ACTION_LIKE, ACTION_REMOVE, ACTION_ADD } from '../../action.js';\n\nexport default function PostVideo({ data, dispatch }) {\n    const [message, setMessage] = useState('');\n    const [heartColor, setHeartColor] = useState('');\n    const [heartLiked, setHeartLiked] = useState(false);\n\n    const handleSave = evt => {\n        let message = evt.target.value;\n        setMessage(message);\n    };\n\n    const handleLike = () => {\n        if (heartLiked) {\n            setHeartLiked(false);\n            setHeartColor('black');\n        } else {\n            setHeartLiked(true);\n            setHeartColor('red');\n        }\n        dispatch({ type: ACTION_LIKE, likePostId: data.id });\n    };\n\n    const handleRemove = () => {\n        dispatch({ type: ACTION_REMOVE, removePostId: data.id });\n    };\n\n    const addComment = evt => {\n        evt.preventDefault();\n        dispatch({ type: ACTION_ADD, addPostId: data.id, message: message })\n        setMessage('');\n    };\n\n    return (\n        <li className=\"blockvideo\">\n            <video controls className=\"video\">\n                <source src={data.videoUrl} />\n            </video>\n            <button onClick={handleLike} className={heartColor}>♥{data.likes}</button>\n            <button onClick={handleRemove}>x</button>\n            <p>{data.videoName}</p>\n            <label htmlFor=\"post-video-add-comment\">Comment</label>\n            <form onSubmit={addComment}>\n                <input type=\"text\" id=\"post-video-add-comment\" placeholder=\"add your comment\" onChange={handleSave} value={message} />\n                <button onClick={addComment}>Add</button>\n            </form>\n            <div className=\"common\">\n                {\n                    data.comments.map(o => <VideoMainComments\n                        mainComments={o}\n                        dispatch={dispatch}\n                    />)\n                }\n            </div>\n        </li>\n    )\n}","import React from 'react'\nimport PostVideo from '../PostVideo/PostVideo'\n\nexport default function Post({ data, dispatch }) {\n    return (\n        <li className=\"videos-post\">\n            <PostVideo\n                data={data}\n                dispatch={dispatch}\n            />\n        </li>\n    )\n}\n","import React, { useReducer } from 'react'\nimport PostAddVidForm from '../PostAddVidForm/PostAddVidForm.js'\nimport Post from '../Post/Post.js';\nimport { ACTION_LIKE, ACTION_REMOVE, ACTION_ADD, MAIN_COMMENT_LIKE, SUB_COMMENT_LIKE, MAIN_COMMENT_REMOVE, SUB_COMMENT_REMOVE, MAIN_COMMENT_ADD, ADD_VIDEO } from '../../action.js';\n\nlet nextPostVideoId = 1;\nlet nextMainCommentId = 1;\nlet nextSubCommentId = 1;\n\nconst initialData = [\n    {\n        id: nextPostVideoId++,\n        videoUrl: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4',\n        videoName: 'byGoogle',\n        likes: 7,\n        isLiked: false,\n        comments: []\n    }\n];\n\nfunction commentLike(comments, id) {\n    return comments.map(o => {\n        if (o.id !== id) {\n            return o\n        }\n        if (o.isLiked) {\n            return { ...o, likes: o.likes - 1, isLiked: false };\n        }\n        return { ...o, likes: o.likes + 1, isLiked: true };\n    })\n};\n\nfunction subCommentLike(mainComments, id) {\n    return mainComments.map(\n        p => ({ ...p, comments: commentLike(p.comments, id) })\n    )\n};\n\nfunction remove(data, id) {\n    return data.filter(o => o.id !== id);\n};\n\nfunction subCommentRemove(mainComments, id) {\n    return mainComments.map(\n        p => ({ ...p, comments: remove(p.comments, id) })\n    )\n};\n\nfunction addComment(data, message) {\n    return [{ id: nextMainCommentId++, name: 'Taha', content: message, likes: 0, isLiked: false, comments: [] }, ...data]\n}\n\nfunction addSubComment(data, id, message) {\n    return data.map(\n        p =>\n            ({\n                ...p, comments: p.id !== id ? p.comments : [...p.comments, {\n                    id: nextSubCommentId++, name: 'Bakha', content: message, likes: 0, isLiked: false\n                }]\n            })\n    )\n}\n\nfunction reducer(data, action) {\n    switch (action.type) {\n        case ACTION_LIKE:\n            const { likePostId } = action;\n            return commentLike(data, likePostId);\n        case MAIN_COMMENT_LIKE:\n            const { mainCommentId } = action;\n            return data.map(\n                o => ({ ...o, comments: commentLike(o.comments, mainCommentId) })\n            );\n        case SUB_COMMENT_LIKE:\n            const { subCommentId } = action;\n            return data.map(\n                o => ({ ...o, comments: subCommentLike(o.comments, subCommentId) })\n            );\n        case ACTION_REMOVE:\n            const { removePostId } = action;\n            return remove(data, removePostId);\n        case MAIN_COMMENT_REMOVE:\n            const { mainCommentRemoveId } = action;\n            return data.map(\n                o => ({ ...o, comments: remove(o.comments, mainCommentRemoveId) })\n            );\n        case SUB_COMMENT_REMOVE:\n            const { subCommentRemoveId } = action;\n            return data.map(\n                o => ({ ...o, comments: subCommentRemove(o.comments, subCommentRemoveId) })\n            );\n        case ACTION_ADD:\n            const { addPostId } = action;\n            const { message } = action;\n            return data.map(\n                o => ({\n                    ...o,\n                    comments: o.id !== addPostId ? o.comments : addComment(o.comments, message)\n                })\n            );\n        case MAIN_COMMENT_ADD:\n            const { mainCommentAddId } = action;\n            const { mainMessage } = action;\n            return data.map(\n                o => ({\n                    ...o,\n                    comments: addSubComment(o.comments, mainCommentAddId, mainMessage)\n                })\n            );\n        case ADD_VIDEO:\n            const { videoLink } = action;\n            const { videoName } = action;\n            return [...data, { id: nextPostVideoId++, videoUrl: videoLink, videoName: videoName, likes: 0, isLiked: false, comments: [] }];\n        default:\n            return data;\n    }\n}\n\nexport default function Wall() {\n    const [data, dispatch] = useReducer(reducer, initialData);\n\n    const myTubeIcon = 'https://cdn.worldvectorlogo.com/logos/youtube-icon.svg';\n\n    return (\n        <div className=\"mainBlock\">\n            <header>\n                <figure>\n                    <img src={myTubeIcon} alt=\"\" className=\"myTubeIcon\" />\n                </figure>\n                <div className=\"postAddForm\">\n                    <PostAddVidForm dispatch={dispatch} />\n                </div>\n            </header>\n            <main>\n                <h2>Все видео</h2>\n                <article>\n                    <ul>\n                        {\n                            data.map(o => <Post\n                                data={o}\n                                dispatch={dispatch}\n                            />)\n                        }\n                    </ul>\n                </article>\n            </main>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport Wall from './components/Wall/Wall'\n\nexport default function App() {\n    return (\n        <div>\n            <Wall />\n        </div>\n    )\n}\n"],"sourceRoot":""}